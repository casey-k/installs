#!/usr/bin/env bash

# Installs git and pulls down the env repos. Installs all pre-reqs to install-packages

# Duplicating from os.sh in delivery/env so this can be stand-alone
is_osx() {
    if [ "$(uname -s)" == "Darwin" ]; then
        return 0
    fi

    return 1
}

is_linux() {
    if [ "$(uname -s)" == "Linux" ]; then
        return 0
    fi

    return 1
}

exists() {
    local cmd_to_find="$1"
    command -v $cmd_to_find >/dev/null 2>&1
    return $?
}

install_brew() {
    echo "Downloading and installing homebrew"
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
}

install_git() {
    echo "Installing git"

    if is_osx; then
        if ! exists "brew"; then
            install_brew
        fi
        brew update
        brew install git
    elif is_linux; then
        # Always install the latest
        sudo add-apt-repository -y ppa:git-core/ppa
        sudo apt-get update 
        sudo apt-get install -y git
    else
        echo "unrecognized os"
        return 1
    fi
}

soft_link_safely() {
    local original=$1
    local link=$2

    if [[ -L $link ]]; then
        return
    fi
    ln -s $original $link
}

if  exists "git" ; then 
    echo "git already installed"
else
    install_git
fi

# pull down the utility repos
PROJECT_DIR=$HOME/casey-k
GIT_BASE="git@github.com"

repos=(
    installs
    env
)

mkdir -p $PROJECT_DIR
pushd $PROJECT_DIR
for repo in ${repos[@]}; do
    repo_dir=$PROJECT_DIR/$repo
    mkdir -p $repo_dir
    if [[ -n $(ls -A $repo_dir) ]]; then
        echo "Non-empty directory $repo_dir. Skipping the clone"
       continue
    fi

    git clone ${GIT_BASE}:${repo}
done
popd

# Install the symlinks for the utility repos
soft_link_safely ${PROJECT_DIR}/casey-k/env $HOME/caseyk-env

